# include following in .bashrc / .bash_profile / .zshrc
# usage
# $ mkvenv myvirtualenv # creates venv under ~/.venv/
# $ venv myvirtualenv   # activates venv
# $ devenv              # deactivates venv
# $ rmvenv myvirtualenv # removes venv
# $ cdvirtualenv        # change directory to venv home

# Options
PYTHON_EXEC="python3.9"
export VENV_HOME="$HOME/.venv"

# Ensure directory $VENV_HOME exists
[[ -d $VENV_HOME ]] || mkdir $VENV_HOME

# Disable PS1 stuff
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Activate venv
venv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      source "$VENV_HOME/$1/bin/activate"
      set_ps1
  fi
}

# Deactivate venv
devenv() {
  if [ -n "${VIRTUAL_ENV}" ];
    then
      deactivate
      unset_ps1
  fi
}

# Make a venv
mkvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      $PYTHON_EXEC -m venv $VENV_HOME/$1
  fi
}

# Remove a venv
rmvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      rm -r $VENV_HOME/$1
  fi
}

# Get the venv name
venvname() {
    if [ -z "${VIRTUAL_ENV}" ]; then
        echo ''
    else
        echo "$(basename "${VIRTUAL_ENV}")"
    fi
}

# Utils to work with
cdvirtualenv() {
  if [ -n "${VIRTUAL_ENV}" ];
    then
        cd "$VENV_HOME/`venvname`"
  fi
}

# Set the PS1
set_ps1() {
    export _OLD_PS1_JONMD="${PS1:-}"
    name="`venvname`"
    export PS1='\[\e[33m\]$(venvname)\[\e[0m\] '"${_OLD_PS1_JONMD}"
}

# Revert to the old PS1
unset_ps1() {
    if [ -n "${_OLD_PS1_JONMD}" ]; then
        export PS1="${_OLD_PS1_JONMD}"
        unset _OLD_PS1_JONMD
    fi
}

# Bash autocompletions for venv command
_venv_completions() {
  venv_items="`ls -1 "$HOME/.venv"`"
  for t in $venv_items; do
    COMPREPLY+=("$t")
  done
}

complete -F _venv_completions venv



